# Qingxiang Guo
# {2022/6/8} {17:29}
'''这里介绍如何使用os.walk功能来遍历目录，输出所有目录，文件，以及子目录中的目录和文件
下面这个演示程序输出如下：
返回的是一个三元组(root,dirs,files),root 所指的是当前正在遍历的这个文件夹的本身的地址, dirs 是一个 list ，内容是该文件夹中所有的目录的名字(不包括子目录)
files 同样是 list , 内容是该文件夹中所有的文件(不包括子目录)
('./aa', ['bb', 'cc'], ['1.txt', '2.txt'])  #当前路径是aa，里面有两个目录，两个文件
('./aa\\bb', ['dd', 'ee'], ['33.txt', '44.txt'])  #当前路径是aa/bb，bb里面有两个目录，三个文件
('./aa\\bb\\dd', [], [])
('./aa\\bb\\ee', [], [])
('./aa\\cc', [], [])   #当前路径是aa里面的cc，cc里面没有子目录，也没有子文件
怎么理解呢？
【重点】os.wal('./aa')的输出结果为一个生成器，(generator),也就是说我们需要不断的遍历它,来获得所有的内容。
每次遍历的对象都是返回的是一个三元组(root,dirs,files)

os.walk会用深度遍历的方式，一个一个文件夹全部走完，然后组成一个生成器，三个信息一组，存起来，等待遍历
所以你遍历的时候，也要用三个元素来对应取值

里面有固定的三个参数，这三个参数分别为
第一个是当前路径，第二个你指定的这个路径下有哪些文件夹，第三个，你指定的这个路径下有哪些文件
他们各自放在一个列表里面，然后最后放一个元组里面
遍历的时候有两种，一个是同级遍历，叫广度遍历，一个是打破沙锅问到底遍历，先集中找完一个，叫深度遍历
os.walk属于深度遍历
'''
import os

for temp in os.walk('./aa'):
    print(temp)

